S -> PROG
PROG -> START_PROLOG CODE END_PROLOG endOfFile

START_PROLOG -> startProlog function("declare") ( function("strict_types") = integer(1) ) ;

END_PROLOG -> eps
END_PROLOG -> endProlog 

CODE -> eps 
CODE -> { CODE } 
CODE -> FUNC_CALL CODE 
CODE -> IF_ELSE CODE
 
CODE -> while ( EXP ) { CODE } CODE 
CODE -> 

IF_ELSE -> if ( EXP ) { CODE } else { CODE } 
FUNC_CALL -> function_id ( FUNC_CALL_ARGS ) ; 
FUNC_CALL_ARGS -> eps
FUNC_CALL_ARGS -> ARG NEXT_ARG
NEXT_ARG -> eps
NEXT_ARG -> , ARG NEXT_ARG
ARG -> variable
ARG -> LITERAL 
LITERAL -> string
LITERAL -> float
LITERAL -> int
LITERAL -> null

terminals:
	if,
	else,
	while,
	function
	function_id,
	int,
	float,
	string,
	void,
	null,
	return,
	=
	equal,
	startProlog,
	endProlog,
	;
	(
	)
	{
	}
	.
	:
	,
	variable,
	endOfFile,
	eps
