S -> PROG
PROG -> START_PROLOG CODE END_PROLOG endOfFile

START_PROLOG -> startProlog function("declare") leftBracket function("strict_types") assign integer(1) rightBracket semicolon

END_PROLOG -> eps
END_PROLOG -> endProlog 

CODE -> eps 
CODE -> leftCurlyBracket CODE rightCurlyBracket
CODE -> FUNC_CALL CODE 
CODE -> if_keyword leftBracket EXP rightBracket leftCurlyBracket CODE rightCurlyBracket else_keyword leftCurlyBracket CODE rightCurlyBracket CODE 
CODE -> while_keyword leftBracket EXP rightBracket leftCurlyBracket CODE rightCurlyBracket CODE 
CODE -> 

FUNC_CALL -> function_id leftBracket FUNC_CALL_ARGS rightBracket semicolon 
FUNC_CALL_ARGS -> eps
FUNC_CALL_ARGS -> ARG NEXT_ARG
NEXT_ARG -> eps
NEXT_ARG -> colon ARG NEXT_ARG
ARG -> variable
ARG -> LITERAL 
LITERAL -> string
LITERAL -> float
LITERAL -> int
LITERAL -> null

terminals:
	else,
	float,
	function_id,
	if,
	int,
	null,
	return,
	string,
	void,
	while,
	integer,
	float,
	concat,
	assign,
	equal,
	startProlog,
	semicolon,
	leftBracket,
	rightBracket,
	leftCurlyBracket,
	rightCurlyBracket,
	endProlog,
	variable,
	function,
	keyword,
	datatype,
	colon,
	comma,
	endOfFile,
	notEqual,
	string,
	eps
